Terminals unused in grammar

    UNKOWN


State 138 conflicts: 1 shift/reduce


Grammar

    0 $accept: class_list $end

    1 class_list: class_declaration class_klein

    2 class_klein: class_declaration class_klein
    3            | ε

    4 class_declaration: KEYWORD_CLASS ID OPEN_BRACE member_declaration_klein CLOSE_BRACE SEMICOLON
    5                  | KEYWORD_CLASS ID KEYWORD_EXTENDS ID OPEN_BRACE member_declaration_klein CLOSE_BRACE SEMICOLON

    6 member_declaration: type ID SEMICOLON
    7                   | type ID OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS OPEN_BRACE statement_klein CLOSE_BRACE
    8                   | ID OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS OPEN_BRACE statement_klein CLOSE_BRACE

    9 member_declaration_klein: member_declaration member_declaration_klein
   10                         | ε

   11 statement: expr SEMICOLON
   12          | type ID SEMICOLON
   13          | lvalue ASSIGN expr SEMICOLON
   14          | KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement
   15          | KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement KEYWORD_ELSE statement
   16          | KEYWORD_WHILE OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement
   17          | OPEN_BRACE statement_klein CLOSE_BRACE
   18          | KEYWORD_RETURN expr SEMICOLON
   19          | SEMICOLON

   20 statement_klein: statement statement_klein
   21                | ε

   22 actuals: expr actuals_optional
   23        | ε

   24 actuals_optional: COMMA expr actuals_optional
   25                 | ε

   26 expr: expr TIMES expr
   27     | expr DIVIDE expr
   28     | expr PLUS expr
   29     | expr MINUS expr
   30     | OPEN_PARENTHESIS expr CLOSE_PARENTHESIS
   31     | expr AND expr
   32     | expr OR expr
   33     | expr EQUIVALENT expr
   34     | expr IS_NOT_EQUAL expr
   35     | expr LESS_THAN_OR_EQUAL expr
   36     | expr LESS_THAN expr
   37     | expr GREATER_THAN_OR_EQUAL expr
   38     | expr GREATER_THAN expr
   39     | MINUS expr
   40     | NEGATE expr
   41     | INTEGER
   42     | KEYWORD_TRUE
   43     | KEYWORD_FALSE
   44     | KEYWORD_NEW ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS
   45     | KEYWORD_NEW type OPEN_SQUARE expr CLOSE_SQUARE
   46     | lvalue

   47 lvalue: ID
   48       | ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS
   49       | lvalue OPEN_SQUARE expr CLOSE_SQUARE
   50       | lvalue DOT ID
   51       | lvalue DOT ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS
   52       | KEYWORD_THIS

   53 type: KEYWORD_INT
   54     | KEYWORD_BOOL
   55     | KEYWORD_VOID
   56     | ID
   57     | KEYWORD_INT SQUARE_PAIR
   58     | KEYWORD_BOOL SQUARE_PAIR
   59     | KEYWORD_VOID SQUARE_PAIR
   60     | ID SQUARE_PAIR

   61 formal: type ID

   62 formals_list: formal formals_optional
   63             | ε

   64 formals_optional: COMMA formal formals_optional
   65                 | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SEMICOLON (258) 4 5 6 11 12 13 18 19
    COMMA (259) 24 64
    KEYWORD_NEW (260) 44 45
    KEYWORD_RETURN (261) 18
    OPEN_SQUARE (262) 45 49
    CLOSE_SQUARE (263) 45 49
    ASSIGN (264) 13
    LESS_THAN_OR_EQUAL (265) 35
    GREATER_THAN_OR_EQUAL (266) 37
    EQUIVALENT (267) 33
    IS_NOT_EQUAL (268) 34
    LESS_THAN (269) 36
    GREATER_THAN (270) 38
    OR (271) 32
    AND (272) 31
    MINUS (273) 29 39
    PLUS (274) 28
    DIVIDE (275) 27
    TIMES (276) 26
    NEGATE (277) 40
    DOT (278) 50 51
    OPEN_PARENTHESIS (279) 7 8 14 15 16 30 44 48 51
    CLOSE_PARENTHESIS (280) 7 8 14 15 16 30 44 48 51
    OPEN_BRACE (281) 4 5 7 8 17
    CLOSE_BRACE (282) 4 5 7 8 17
    SQUARE_PAIR (283) 57 58 59 60
    KEYWORD_WHILE (284) 16
    KEYWORD_IF (285) 14 15
    KEYWORD_ELSE (286) 15
    KEYWORD_THIS (287) 52
    KEYWORD_CLASS (288) 4 5
    KEYWORD_EXTENDS (289) 5
    KEYWORD_INT (290) 53 57
    KEYWORD_BOOL (291) 54 58
    KEYWORD_VOID (292) 55 59
    KEYWORD_TRUE <val> (293) 42
    KEYWORD_FALSE <val> (294) 43
    INTEGER <val> (295) 41
    ID <id> (296) 4 5 6 7 8 12 44 47 48 50 51 56 60 61
    UNKOWN (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    class_list <class_list> (44)
        on left: 1
        on right: 0
    class_klein <class_list> (45)
        on left: 2 3
        on right: 1 2
    class_declaration <clazz> (46)
        on left: 4 5
        on right: 1 2
    member_declaration <member_declaration> (47)
        on left: 6 7 8
        on right: 9
    member_declaration_klein <member_declaration_list> (48)
        on left: 9 10
        on right: 4 5 9
    statement <statement> (49)
        on left: 11 12 13 14 15 16 17 18 19
        on right: 14 15 16 20
    statement_klein <body> (50)
        on left: 20 21
        on right: 7 8 17 20
    actuals <actual> (51)
        on left: 22 23
        on right: 44 48 51
    actuals_optional <actual> (52)
        on left: 24 25
        on right: 22 24
    expr <expr> (53)
        on left: 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
        on right: 11 13 14 15 16 18 22 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 45 49
    lvalue <lvalue> (54)
        on left: 47 48 49 50 51 52
        on right: 13 46 49 50 51
    type <type> (55)
        on left: 53 54 55 56 57 58 59 60
        on right: 6 7 12 45 61
    formal <formal> (56)
        on left: 61
        on right: 62 64
    formals_list <formals> (57)
        on left: 62 63
        on right: 7 8
    formals_optional <formals> (58)
        on left: 64 65
        on right: 62 64


State 0

    0 $accept: • class_list $end

    KEYWORD_CLASS  shift, and go to state 1

    class_list         go to state 2
    class_declaration  go to state 3


State 1

    4 class_declaration: KEYWORD_CLASS • ID OPEN_BRACE member_declaration_klein CLOSE_BRACE SEMICOLON
    5                  | KEYWORD_CLASS • ID KEYWORD_EXTENDS ID OPEN_BRACE member_declaration_klein CLOSE_BRACE SEMICOLON

    ID  shift, and go to state 4


State 2

    0 $accept: class_list • $end

    $end  shift, and go to state 5


State 3

    1 class_list: class_declaration • class_klein

    KEYWORD_CLASS  shift, and go to state 1

    $default  reduce using rule 3 (class_klein)

    class_klein        go to state 6
    class_declaration  go to state 7


State 4

    4 class_declaration: KEYWORD_CLASS ID • OPEN_BRACE member_declaration_klein CLOSE_BRACE SEMICOLON
    5                  | KEYWORD_CLASS ID • KEYWORD_EXTENDS ID OPEN_BRACE member_declaration_klein CLOSE_BRACE SEMICOLON

    OPEN_BRACE       shift, and go to state 8
    KEYWORD_EXTENDS  shift, and go to state 9


State 5

    0 $accept: class_list $end •

    $default  accept


State 6

    1 class_list: class_declaration class_klein •

    $default  reduce using rule 1 (class_list)


State 7

    2 class_klein: class_declaration • class_klein

    KEYWORD_CLASS  shift, and go to state 1

    $default  reduce using rule 3 (class_klein)

    class_klein        go to state 10
    class_declaration  go to state 7


State 8

    4 class_declaration: KEYWORD_CLASS ID OPEN_BRACE • member_declaration_klein CLOSE_BRACE SEMICOLON

    KEYWORD_INT   shift, and go to state 11
    KEYWORD_BOOL  shift, and go to state 12
    KEYWORD_VOID  shift, and go to state 13
    ID            shift, and go to state 14

    $default  reduce using rule 10 (member_declaration_klein)

    member_declaration        go to state 15
    member_declaration_klein  go to state 16
    type                      go to state 17


State 9

    5 class_declaration: KEYWORD_CLASS ID KEYWORD_EXTENDS • ID OPEN_BRACE member_declaration_klein CLOSE_BRACE SEMICOLON

    ID  shift, and go to state 18


State 10

    2 class_klein: class_declaration class_klein •

    $default  reduce using rule 2 (class_klein)


State 11

   53 type: KEYWORD_INT •
   57     | KEYWORD_INT • SQUARE_PAIR

    SQUARE_PAIR  shift, and go to state 19

    $default  reduce using rule 53 (type)


State 12

   54 type: KEYWORD_BOOL •
   58     | KEYWORD_BOOL • SQUARE_PAIR

    SQUARE_PAIR  shift, and go to state 20

    $default  reduce using rule 54 (type)


State 13

   55 type: KEYWORD_VOID •
   59     | KEYWORD_VOID • SQUARE_PAIR

    SQUARE_PAIR  shift, and go to state 21

    $default  reduce using rule 55 (type)


State 14

    8 member_declaration: ID • OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS OPEN_BRACE statement_klein CLOSE_BRACE
   56 type: ID •
   60     | ID • SQUARE_PAIR

    OPEN_PARENTHESIS  shift, and go to state 22
    SQUARE_PAIR       shift, and go to state 23

    $default  reduce using rule 56 (type)


State 15

    9 member_declaration_klein: member_declaration • member_declaration_klein

    KEYWORD_INT   shift, and go to state 11
    KEYWORD_BOOL  shift, and go to state 12
    KEYWORD_VOID  shift, and go to state 13
    ID            shift, and go to state 14

    $default  reduce using rule 10 (member_declaration_klein)

    member_declaration        go to state 15
    member_declaration_klein  go to state 24
    type                      go to state 17


State 16

    4 class_declaration: KEYWORD_CLASS ID OPEN_BRACE member_declaration_klein • CLOSE_BRACE SEMICOLON

    CLOSE_BRACE  shift, and go to state 25


State 17

    6 member_declaration: type • ID SEMICOLON
    7                   | type • ID OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS OPEN_BRACE statement_klein CLOSE_BRACE

    ID  shift, and go to state 26


State 18

    5 class_declaration: KEYWORD_CLASS ID KEYWORD_EXTENDS ID • OPEN_BRACE member_declaration_klein CLOSE_BRACE SEMICOLON

    OPEN_BRACE  shift, and go to state 27


State 19

   57 type: KEYWORD_INT SQUARE_PAIR •

    $default  reduce using rule 57 (type)


State 20

   58 type: KEYWORD_BOOL SQUARE_PAIR •

    $default  reduce using rule 58 (type)


State 21

   59 type: KEYWORD_VOID SQUARE_PAIR •

    $default  reduce using rule 59 (type)


State 22

    8 member_declaration: ID OPEN_PARENTHESIS • formals_list CLOSE_PARENTHESIS OPEN_BRACE statement_klein CLOSE_BRACE

    KEYWORD_INT   shift, and go to state 11
    KEYWORD_BOOL  shift, and go to state 12
    KEYWORD_VOID  shift, and go to state 13
    ID            shift, and go to state 28

    $default  reduce using rule 63 (formals_list)

    type          go to state 29
    formal        go to state 30
    formals_list  go to state 31


State 23

   60 type: ID SQUARE_PAIR •

    $default  reduce using rule 60 (type)


State 24

    9 member_declaration_klein: member_declaration member_declaration_klein •

    $default  reduce using rule 9 (member_declaration_klein)


State 25

    4 class_declaration: KEYWORD_CLASS ID OPEN_BRACE member_declaration_klein CLOSE_BRACE • SEMICOLON

    SEMICOLON  shift, and go to state 32


State 26

    6 member_declaration: type ID • SEMICOLON
    7                   | type ID • OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS OPEN_BRACE statement_klein CLOSE_BRACE

    SEMICOLON         shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 34


State 27

    5 class_declaration: KEYWORD_CLASS ID KEYWORD_EXTENDS ID OPEN_BRACE • member_declaration_klein CLOSE_BRACE SEMICOLON

    KEYWORD_INT   shift, and go to state 11
    KEYWORD_BOOL  shift, and go to state 12
    KEYWORD_VOID  shift, and go to state 13
    ID            shift, and go to state 14

    $default  reduce using rule 10 (member_declaration_klein)

    member_declaration        go to state 15
    member_declaration_klein  go to state 35
    type                      go to state 17


State 28

   56 type: ID •
   60     | ID • SQUARE_PAIR

    SQUARE_PAIR  shift, and go to state 23

    $default  reduce using rule 56 (type)


State 29

   61 formal: type • ID

    ID  shift, and go to state 36


State 30

   62 formals_list: formal • formals_optional

    COMMA  shift, and go to state 37

    $default  reduce using rule 65 (formals_optional)

    formals_optional  go to state 38


State 31

    8 member_declaration: ID OPEN_PARENTHESIS formals_list • CLOSE_PARENTHESIS OPEN_BRACE statement_klein CLOSE_BRACE

    CLOSE_PARENTHESIS  shift, and go to state 39


State 32

    4 class_declaration: KEYWORD_CLASS ID OPEN_BRACE member_declaration_klein CLOSE_BRACE SEMICOLON •

    $default  reduce using rule 4 (class_declaration)


State 33

    6 member_declaration: type ID SEMICOLON •

    $default  reduce using rule 6 (member_declaration)


State 34

    7 member_declaration: type ID OPEN_PARENTHESIS • formals_list CLOSE_PARENTHESIS OPEN_BRACE statement_klein CLOSE_BRACE

    KEYWORD_INT   shift, and go to state 11
    KEYWORD_BOOL  shift, and go to state 12
    KEYWORD_VOID  shift, and go to state 13
    ID            shift, and go to state 28

    $default  reduce using rule 63 (formals_list)

    type          go to state 29
    formal        go to state 30
    formals_list  go to state 40


State 35

    5 class_declaration: KEYWORD_CLASS ID KEYWORD_EXTENDS ID OPEN_BRACE member_declaration_klein • CLOSE_BRACE SEMICOLON

    CLOSE_BRACE  shift, and go to state 41


State 36

   61 formal: type ID •

    $default  reduce using rule 61 (formal)


State 37

   64 formals_optional: COMMA • formal formals_optional

    KEYWORD_INT   shift, and go to state 11
    KEYWORD_BOOL  shift, and go to state 12
    KEYWORD_VOID  shift, and go to state 13
    ID            shift, and go to state 28

    type    go to state 29
    formal  go to state 42


State 38

   62 formals_list: formal formals_optional •

    $default  reduce using rule 62 (formals_list)


State 39

    8 member_declaration: ID OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS • OPEN_BRACE statement_klein CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 43


State 40

    7 member_declaration: type ID OPEN_PARENTHESIS formals_list • CLOSE_PARENTHESIS OPEN_BRACE statement_klein CLOSE_BRACE

    CLOSE_PARENTHESIS  shift, and go to state 44


State 41

    5 class_declaration: KEYWORD_CLASS ID KEYWORD_EXTENDS ID OPEN_BRACE member_declaration_klein CLOSE_BRACE • SEMICOLON

    SEMICOLON  shift, and go to state 45


State 42

   64 formals_optional: COMMA formal • formals_optional

    COMMA  shift, and go to state 37

    $default  reduce using rule 65 (formals_optional)

    formals_optional  go to state 46


State 43

    8 member_declaration: ID OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS OPEN_BRACE • statement_klein CLOSE_BRACE

    SEMICOLON         shift, and go to state 47
    KEYWORD_NEW       shift, and go to state 48
    KEYWORD_RETURN    shift, and go to state 49
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    OPEN_BRACE        shift, and go to state 53
    KEYWORD_WHILE     shift, and go to state 54
    KEYWORD_IF        shift, and go to state 55
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 60

    $default  reduce using rule 21 (statement_klein)

    statement        go to state 61
    statement_klein  go to state 62
    expr             go to state 63
    lvalue           go to state 64
    type             go to state 65


State 44

    7 member_declaration: type ID OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS • OPEN_BRACE statement_klein CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 66


State 45

    5 class_declaration: KEYWORD_CLASS ID KEYWORD_EXTENDS ID OPEN_BRACE member_declaration_klein CLOSE_BRACE SEMICOLON •

    $default  reduce using rule 5 (class_declaration)


State 46

   64 formals_optional: COMMA formal formals_optional •

    $default  reduce using rule 64 (formals_optional)


State 47

   19 statement: SEMICOLON •

    $default  reduce using rule 19 (statement)


State 48

   44 expr: KEYWORD_NEW • ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS
   45     | KEYWORD_NEW • type OPEN_SQUARE expr CLOSE_SQUARE

    KEYWORD_INT   shift, and go to state 11
    KEYWORD_BOOL  shift, and go to state 12
    KEYWORD_VOID  shift, and go to state 13
    ID            shift, and go to state 67

    type  go to state 68


State 49

   18 statement: KEYWORD_RETURN • expr SEMICOLON

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 70
    lvalue  go to state 71


State 50

   39 expr: MINUS • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 72
    lvalue  go to state 71


State 51

   40 expr: NEGATE • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 73
    lvalue  go to state 71


State 52

   30 expr: OPEN_PARENTHESIS • expr CLOSE_PARENTHESIS

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 74
    lvalue  go to state 71


State 53

   17 statement: OPEN_BRACE • statement_klein CLOSE_BRACE

    SEMICOLON         shift, and go to state 47
    KEYWORD_NEW       shift, and go to state 48
    KEYWORD_RETURN    shift, and go to state 49
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    OPEN_BRACE        shift, and go to state 53
    KEYWORD_WHILE     shift, and go to state 54
    KEYWORD_IF        shift, and go to state 55
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 60

    $default  reduce using rule 21 (statement_klein)

    statement        go to state 61
    statement_klein  go to state 75
    expr             go to state 63
    lvalue           go to state 64
    type             go to state 65


State 54

   16 statement: KEYWORD_WHILE • OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement

    OPEN_PARENTHESIS  shift, and go to state 76


State 55

   14 statement: KEYWORD_IF • OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement
   15          | KEYWORD_IF • OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement KEYWORD_ELSE statement

    OPEN_PARENTHESIS  shift, and go to state 77


State 56

   52 lvalue: KEYWORD_THIS •

    $default  reduce using rule 52 (lvalue)


State 57

   42 expr: KEYWORD_TRUE •

    $default  reduce using rule 42 (expr)


State 58

   43 expr: KEYWORD_FALSE •

    $default  reduce using rule 43 (expr)


State 59

   41 expr: INTEGER •

    $default  reduce using rule 41 (expr)


State 60

   47 lvalue: ID •
   48       | ID • OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS
   56 type: ID •
   60     | ID • SQUARE_PAIR

    OPEN_PARENTHESIS  shift, and go to state 78
    SQUARE_PAIR       shift, and go to state 23

    ID        reduce using rule 56 (type)
    $default  reduce using rule 47 (lvalue)


State 61

   20 statement_klein: statement • statement_klein

    SEMICOLON         shift, and go to state 47
    KEYWORD_NEW       shift, and go to state 48
    KEYWORD_RETURN    shift, and go to state 49
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    OPEN_BRACE        shift, and go to state 53
    KEYWORD_WHILE     shift, and go to state 54
    KEYWORD_IF        shift, and go to state 55
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 60

    $default  reduce using rule 21 (statement_klein)

    statement        go to state 61
    statement_klein  go to state 79
    expr             go to state 63
    lvalue           go to state 64
    type             go to state 65


State 62

    8 member_declaration: ID OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS OPEN_BRACE statement_klein • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 80


State 63

   11 statement: expr • SEMICOLON
   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    SEMICOLON              shift, and go to state 81
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUIVALENT             shift, and go to state 84
    IS_NOT_EQUAL           shift, and go to state 85
    LESS_THAN              shift, and go to state 86
    GREATER_THAN           shift, and go to state 87
    OR                     shift, and go to state 88
    AND                    shift, and go to state 89
    MINUS                  shift, and go to state 90
    PLUS                   shift, and go to state 91
    DIVIDE                 shift, and go to state 92
    TIMES                  shift, and go to state 93


State 64

   13 statement: lvalue • ASSIGN expr SEMICOLON
   46 expr: lvalue •
   49 lvalue: lvalue • OPEN_SQUARE expr CLOSE_SQUARE
   50       | lvalue • DOT ID
   51       | lvalue • DOT ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    OPEN_SQUARE  shift, and go to state 94
    ASSIGN       shift, and go to state 95
    DOT          shift, and go to state 96

    $default  reduce using rule 46 (expr)


State 65

   12 statement: type • ID SEMICOLON

    ID  shift, and go to state 97


State 66

    7 member_declaration: type ID OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS OPEN_BRACE • statement_klein CLOSE_BRACE

    SEMICOLON         shift, and go to state 47
    KEYWORD_NEW       shift, and go to state 48
    KEYWORD_RETURN    shift, and go to state 49
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    OPEN_BRACE        shift, and go to state 53
    KEYWORD_WHILE     shift, and go to state 54
    KEYWORD_IF        shift, and go to state 55
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 60

    $default  reduce using rule 21 (statement_klein)

    statement        go to state 61
    statement_klein  go to state 98
    expr             go to state 63
    lvalue           go to state 64
    type             go to state 65


State 67

   44 expr: KEYWORD_NEW ID • OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS
   56 type: ID •
   60     | ID • SQUARE_PAIR

    OPEN_PARENTHESIS  shift, and go to state 99
    SQUARE_PAIR       shift, and go to state 23

    $default  reduce using rule 56 (type)


State 68

   45 expr: KEYWORD_NEW type • OPEN_SQUARE expr CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 100


State 69

   47 lvalue: ID •
   48       | ID • OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 78

    $default  reduce using rule 47 (lvalue)


State 70

   18 statement: KEYWORD_RETURN expr • SEMICOLON
   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    SEMICOLON              shift, and go to state 101
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUIVALENT             shift, and go to state 84
    IS_NOT_EQUAL           shift, and go to state 85
    LESS_THAN              shift, and go to state 86
    GREATER_THAN           shift, and go to state 87
    OR                     shift, and go to state 88
    AND                    shift, and go to state 89
    MINUS                  shift, and go to state 90
    PLUS                   shift, and go to state 91
    DIVIDE                 shift, and go to state 92
    TIMES                  shift, and go to state 93


State 71

   46 expr: lvalue •
   49 lvalue: lvalue • OPEN_SQUARE expr CLOSE_SQUARE
   50       | lvalue • DOT ID
   51       | lvalue • DOT ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    OPEN_SQUARE  shift, and go to state 94
    DOT          shift, and go to state 96

    $default  reduce using rule 46 (expr)


State 72

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr
   39     | MINUS expr •

    PLUS    shift, and go to state 91
    DIVIDE  shift, and go to state 92
    TIMES   shift, and go to state 93

    $default  reduce using rule 39 (expr)


State 73

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr
   40     | NEGATE expr •

    $default  reduce using rule 40 (expr)


State 74

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   30     | OPEN_PARENTHESIS expr • CLOSE_PARENTHESIS
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUIVALENT             shift, and go to state 84
    IS_NOT_EQUAL           shift, and go to state 85
    LESS_THAN              shift, and go to state 86
    GREATER_THAN           shift, and go to state 87
    OR                     shift, and go to state 88
    AND                    shift, and go to state 89
    MINUS                  shift, and go to state 90
    PLUS                   shift, and go to state 91
    DIVIDE                 shift, and go to state 92
    TIMES                  shift, and go to state 93
    CLOSE_PARENTHESIS      shift, and go to state 102


State 75

   17 statement: OPEN_BRACE statement_klein • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 103


State 76

   16 statement: KEYWORD_WHILE OPEN_PARENTHESIS • expr CLOSE_PARENTHESIS statement

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 104
    lvalue  go to state 71


State 77

   14 statement: KEYWORD_IF OPEN_PARENTHESIS • expr CLOSE_PARENTHESIS statement
   15          | KEYWORD_IF OPEN_PARENTHESIS • expr CLOSE_PARENTHESIS statement KEYWORD_ELSE statement

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 105
    lvalue  go to state 71


State 78

   48 lvalue: ID OPEN_PARENTHESIS • actuals CLOSE_PARENTHESIS

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    $default  reduce using rule 23 (actuals)

    actuals  go to state 106
    expr     go to state 107
    lvalue   go to state 71


State 79

   20 statement_klein: statement statement_klein •

    $default  reduce using rule 20 (statement_klein)


State 80

    8 member_declaration: ID OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS OPEN_BRACE statement_klein CLOSE_BRACE •

    $default  reduce using rule 8 (member_declaration)


State 81

   11 statement: expr SEMICOLON •

    $default  reduce using rule 11 (statement)


State 82

   35 expr: expr LESS_THAN_OR_EQUAL • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 108
    lvalue  go to state 71


State 83

   37 expr: expr GREATER_THAN_OR_EQUAL • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 109
    lvalue  go to state 71


State 84

   33 expr: expr EQUIVALENT • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 110
    lvalue  go to state 71


State 85

   34 expr: expr IS_NOT_EQUAL • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 111
    lvalue  go to state 71


State 86

   36 expr: expr LESS_THAN • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 112
    lvalue  go to state 71


State 87

   38 expr: expr GREATER_THAN • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 113
    lvalue  go to state 71


State 88

   32 expr: expr OR • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 114
    lvalue  go to state 71


State 89

   31 expr: expr AND • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 115
    lvalue  go to state 71


State 90

   29 expr: expr MINUS • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 116
    lvalue  go to state 71


State 91

   28 expr: expr PLUS • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 117
    lvalue  go to state 71


State 92

   27 expr: expr DIVIDE • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 118
    lvalue  go to state 71


State 93

   26 expr: expr TIMES • expr

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 119
    lvalue  go to state 71


State 94

   49 lvalue: lvalue OPEN_SQUARE • expr CLOSE_SQUARE

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 120
    lvalue  go to state 71


State 95

   13 statement: lvalue ASSIGN • expr SEMICOLON

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 121
    lvalue  go to state 71


State 96

   50 lvalue: lvalue DOT • ID
   51       | lvalue DOT • ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    ID  shift, and go to state 122


State 97

   12 statement: type ID • SEMICOLON

    SEMICOLON  shift, and go to state 123


State 98

    7 member_declaration: type ID OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS OPEN_BRACE statement_klein • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 124


State 99

   44 expr: KEYWORD_NEW ID OPEN_PARENTHESIS • actuals CLOSE_PARENTHESIS

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    $default  reduce using rule 23 (actuals)

    actuals  go to state 125
    expr     go to state 107
    lvalue   go to state 71


State 100

   45 expr: KEYWORD_NEW type OPEN_SQUARE • expr CLOSE_SQUARE

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 126
    lvalue  go to state 71


State 101

   18 statement: KEYWORD_RETURN expr SEMICOLON •

    $default  reduce using rule 18 (statement)


State 102

   30 expr: OPEN_PARENTHESIS expr CLOSE_PARENTHESIS •

    $default  reduce using rule 30 (expr)


State 103

   17 statement: OPEN_BRACE statement_klein CLOSE_BRACE •

    $default  reduce using rule 17 (statement)


State 104

   16 statement: KEYWORD_WHILE OPEN_PARENTHESIS expr • CLOSE_PARENTHESIS statement
   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUIVALENT             shift, and go to state 84
    IS_NOT_EQUAL           shift, and go to state 85
    LESS_THAN              shift, and go to state 86
    GREATER_THAN           shift, and go to state 87
    OR                     shift, and go to state 88
    AND                    shift, and go to state 89
    MINUS                  shift, and go to state 90
    PLUS                   shift, and go to state 91
    DIVIDE                 shift, and go to state 92
    TIMES                  shift, and go to state 93
    CLOSE_PARENTHESIS      shift, and go to state 127


State 105

   14 statement: KEYWORD_IF OPEN_PARENTHESIS expr • CLOSE_PARENTHESIS statement
   15          | KEYWORD_IF OPEN_PARENTHESIS expr • CLOSE_PARENTHESIS statement KEYWORD_ELSE statement
   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUIVALENT             shift, and go to state 84
    IS_NOT_EQUAL           shift, and go to state 85
    LESS_THAN              shift, and go to state 86
    GREATER_THAN           shift, and go to state 87
    OR                     shift, and go to state 88
    AND                    shift, and go to state 89
    MINUS                  shift, and go to state 90
    PLUS                   shift, and go to state 91
    DIVIDE                 shift, and go to state 92
    TIMES                  shift, and go to state 93
    CLOSE_PARENTHESIS      shift, and go to state 128


State 106

   48 lvalue: ID OPEN_PARENTHESIS actuals • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 129


State 107

   22 actuals: expr • actuals_optional
   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    COMMA                  shift, and go to state 130
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUIVALENT             shift, and go to state 84
    IS_NOT_EQUAL           shift, and go to state 85
    LESS_THAN              shift, and go to state 86
    GREATER_THAN           shift, and go to state 87
    OR                     shift, and go to state 88
    AND                    shift, and go to state 89
    MINUS                  shift, and go to state 90
    PLUS                   shift, and go to state 91
    DIVIDE                 shift, and go to state 92
    TIMES                  shift, and go to state 93

    $default  reduce using rule 25 (actuals_optional)

    actuals_optional  go to state 131


State 108

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   35     | expr LESS_THAN_OR_EQUAL expr •
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUIVALENT             shift, and go to state 84
    IS_NOT_EQUAL           shift, and go to state 85
    LESS_THAN              shift, and go to state 86
    GREATER_THAN           shift, and go to state 87
    OR                     shift, and go to state 88
    AND                    shift, and go to state 89
    MINUS                  shift, and go to state 90
    PLUS                   shift, and go to state 91
    DIVIDE                 shift, and go to state 92
    TIMES                  shift, and go to state 93

    LESS_THAN_OR_EQUAL  error (nonassociative)

    $default  reduce using rule 35 (expr)


State 109

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   37     | expr GREATER_THAN_OR_EQUAL expr •
   38     | expr • GREATER_THAN expr

    EQUIVALENT    shift, and go to state 84
    IS_NOT_EQUAL  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GREATER_THAN  shift, and go to state 87
    OR            shift, and go to state 88
    AND           shift, and go to state 89
    MINUS         shift, and go to state 90
    PLUS          shift, and go to state 91
    DIVIDE        shift, and go to state 92
    TIMES         shift, and go to state 93

    GREATER_THAN_OR_EQUAL  error (nonassociative)

    $default  reduce using rule 37 (expr)


State 110

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   33     | expr EQUIVALENT expr •
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    IS_NOT_EQUAL  shift, and go to state 85
    LESS_THAN     shift, and go to state 86
    GREATER_THAN  shift, and go to state 87
    OR            shift, and go to state 88
    AND           shift, and go to state 89
    MINUS         shift, and go to state 90
    PLUS          shift, and go to state 91
    DIVIDE        shift, and go to state 92
    TIMES         shift, and go to state 93

    EQUIVALENT  error (nonassociative)

    $default  reduce using rule 33 (expr)


State 111

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   34     | expr IS_NOT_EQUAL expr •
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    LESS_THAN     shift, and go to state 86
    GREATER_THAN  shift, and go to state 87
    OR            shift, and go to state 88
    AND           shift, and go to state 89
    MINUS         shift, and go to state 90
    PLUS          shift, and go to state 91
    DIVIDE        shift, and go to state 92
    TIMES         shift, and go to state 93

    IS_NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 34 (expr)


State 112

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   36     | expr LESS_THAN expr •
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    GREATER_THAN  shift, and go to state 87
    OR            shift, and go to state 88
    AND           shift, and go to state 89
    MINUS         shift, and go to state 90
    PLUS          shift, and go to state 91
    DIVIDE        shift, and go to state 92
    TIMES         shift, and go to state 93

    LESS_THAN  error (nonassociative)

    $default  reduce using rule 36 (expr)


State 113

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr
   38     | expr GREATER_THAN expr •

    OR      shift, and go to state 88
    AND     shift, and go to state 89
    MINUS   shift, and go to state 90
    PLUS    shift, and go to state 91
    DIVIDE  shift, and go to state 92
    TIMES   shift, and go to state 93

    GREATER_THAN  error (nonassociative)

    $default  reduce using rule 38 (expr)


State 114

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   32     | expr OR expr •
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    AND     shift, and go to state 89
    MINUS   shift, and go to state 90
    PLUS    shift, and go to state 91
    DIVIDE  shift, and go to state 92
    TIMES   shift, and go to state 93

    $default  reduce using rule 32 (expr)


State 115

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   31     | expr AND expr •
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    MINUS   shift, and go to state 90
    PLUS    shift, and go to state 91
    DIVIDE  shift, and go to state 92
    TIMES   shift, and go to state 93

    $default  reduce using rule 31 (expr)


State 116

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   29     | expr MINUS expr •
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    PLUS    shift, and go to state 91
    DIVIDE  shift, and go to state 92
    TIMES   shift, and go to state 93

    $default  reduce using rule 29 (expr)


State 117

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   28     | expr PLUS expr •
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    DIVIDE  shift, and go to state 92
    TIMES   shift, and go to state 93

    $default  reduce using rule 28 (expr)


State 118

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   27     | expr DIVIDE expr •
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    TIMES  shift, and go to state 93

    $default  reduce using rule 27 (expr)


State 119

   26 expr: expr • TIMES expr
   26     | expr TIMES expr •
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    $default  reduce using rule 26 (expr)


State 120

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr
   49 lvalue: lvalue OPEN_SQUARE expr • CLOSE_SQUARE

    CLOSE_SQUARE           shift, and go to state 132
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUIVALENT             shift, and go to state 84
    IS_NOT_EQUAL           shift, and go to state 85
    LESS_THAN              shift, and go to state 86
    GREATER_THAN           shift, and go to state 87
    OR                     shift, and go to state 88
    AND                    shift, and go to state 89
    MINUS                  shift, and go to state 90
    PLUS                   shift, and go to state 91
    DIVIDE                 shift, and go to state 92
    TIMES                  shift, and go to state 93


State 121

   13 statement: lvalue ASSIGN expr • SEMICOLON
   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    SEMICOLON              shift, and go to state 133
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUIVALENT             shift, and go to state 84
    IS_NOT_EQUAL           shift, and go to state 85
    LESS_THAN              shift, and go to state 86
    GREATER_THAN           shift, and go to state 87
    OR                     shift, and go to state 88
    AND                    shift, and go to state 89
    MINUS                  shift, and go to state 90
    PLUS                   shift, and go to state 91
    DIVIDE                 shift, and go to state 92
    TIMES                  shift, and go to state 93


State 122

   50 lvalue: lvalue DOT ID •
   51       | lvalue DOT ID • OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 134

    $default  reduce using rule 50 (lvalue)


State 123

   12 statement: type ID SEMICOLON •

    $default  reduce using rule 12 (statement)


State 124

    7 member_declaration: type ID OPEN_PARENTHESIS formals_list CLOSE_PARENTHESIS OPEN_BRACE statement_klein CLOSE_BRACE •

    $default  reduce using rule 7 (member_declaration)


State 125

   44 expr: KEYWORD_NEW ID OPEN_PARENTHESIS actuals • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 135


State 126

   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr
   45     | KEYWORD_NEW type OPEN_SQUARE expr • CLOSE_SQUARE

    CLOSE_SQUARE           shift, and go to state 136
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUIVALENT             shift, and go to state 84
    IS_NOT_EQUAL           shift, and go to state 85
    LESS_THAN              shift, and go to state 86
    GREATER_THAN           shift, and go to state 87
    OR                     shift, and go to state 88
    AND                    shift, and go to state 89
    MINUS                  shift, and go to state 90
    PLUS                   shift, and go to state 91
    DIVIDE                 shift, and go to state 92
    TIMES                  shift, and go to state 93


State 127

   16 statement: KEYWORD_WHILE OPEN_PARENTHESIS expr CLOSE_PARENTHESIS • statement

    SEMICOLON         shift, and go to state 47
    KEYWORD_NEW       shift, and go to state 48
    KEYWORD_RETURN    shift, and go to state 49
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    OPEN_BRACE        shift, and go to state 53
    KEYWORD_WHILE     shift, and go to state 54
    KEYWORD_IF        shift, and go to state 55
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 60

    statement  go to state 137
    expr       go to state 63
    lvalue     go to state 64
    type       go to state 65


State 128

   14 statement: KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS • statement
   15          | KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS • statement KEYWORD_ELSE statement

    SEMICOLON         shift, and go to state 47
    KEYWORD_NEW       shift, and go to state 48
    KEYWORD_RETURN    shift, and go to state 49
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    OPEN_BRACE        shift, and go to state 53
    KEYWORD_WHILE     shift, and go to state 54
    KEYWORD_IF        shift, and go to state 55
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 60

    statement  go to state 138
    expr       go to state 63
    lvalue     go to state 64
    type       go to state 65


State 129

   48 lvalue: ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS •

    $default  reduce using rule 48 (lvalue)


State 130

   24 actuals_optional: COMMA • expr actuals_optional

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    expr    go to state 139
    lvalue  go to state 71


State 131

   22 actuals: expr actuals_optional •

    $default  reduce using rule 22 (actuals)


State 132

   49 lvalue: lvalue OPEN_SQUARE expr CLOSE_SQUARE •

    $default  reduce using rule 49 (lvalue)


State 133

   13 statement: lvalue ASSIGN expr SEMICOLON •

    $default  reduce using rule 13 (statement)


State 134

   51 lvalue: lvalue DOT ID OPEN_PARENTHESIS • actuals CLOSE_PARENTHESIS

    KEYWORD_NEW       shift, and go to state 48
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 69

    $default  reduce using rule 23 (actuals)

    actuals  go to state 140
    expr     go to state 107
    lvalue   go to state 71


State 135

   44 expr: KEYWORD_NEW ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS •

    $default  reduce using rule 44 (expr)


State 136

   45 expr: KEYWORD_NEW type OPEN_SQUARE expr CLOSE_SQUARE •

    $default  reduce using rule 45 (expr)


State 137

   16 statement: KEYWORD_WHILE OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement •

    $default  reduce using rule 16 (statement)


State 138

   14 statement: KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement •
   15          | KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement • KEYWORD_ELSE statement

    KEYWORD_ELSE  shift, and go to state 141

    KEYWORD_ELSE  [reduce using rule 14 (statement)]
    $default      reduce using rule 14 (statement)


State 139

   24 actuals_optional: COMMA expr • actuals_optional
   26 expr: expr • TIMES expr
   27     | expr • DIVIDE expr
   28     | expr • PLUS expr
   29     | expr • MINUS expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | expr • EQUIVALENT expr
   34     | expr • IS_NOT_EQUAL expr
   35     | expr • LESS_THAN_OR_EQUAL expr
   36     | expr • LESS_THAN expr
   37     | expr • GREATER_THAN_OR_EQUAL expr
   38     | expr • GREATER_THAN expr

    COMMA                  shift, and go to state 130
    LESS_THAN_OR_EQUAL     shift, and go to state 82
    GREATER_THAN_OR_EQUAL  shift, and go to state 83
    EQUIVALENT             shift, and go to state 84
    IS_NOT_EQUAL           shift, and go to state 85
    LESS_THAN              shift, and go to state 86
    GREATER_THAN           shift, and go to state 87
    OR                     shift, and go to state 88
    AND                    shift, and go to state 89
    MINUS                  shift, and go to state 90
    PLUS                   shift, and go to state 91
    DIVIDE                 shift, and go to state 92
    TIMES                  shift, and go to state 93

    $default  reduce using rule 25 (actuals_optional)

    actuals_optional  go to state 142


State 140

   51 lvalue: lvalue DOT ID OPEN_PARENTHESIS actuals • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 143


State 141

   15 statement: KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement KEYWORD_ELSE • statement

    SEMICOLON         shift, and go to state 47
    KEYWORD_NEW       shift, and go to state 48
    KEYWORD_RETURN    shift, and go to state 49
    MINUS             shift, and go to state 50
    NEGATE            shift, and go to state 51
    OPEN_PARENTHESIS  shift, and go to state 52
    OPEN_BRACE        shift, and go to state 53
    KEYWORD_WHILE     shift, and go to state 54
    KEYWORD_IF        shift, and go to state 55
    KEYWORD_THIS      shift, and go to state 56
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 57
    KEYWORD_FALSE     shift, and go to state 58
    INTEGER           shift, and go to state 59
    ID                shift, and go to state 60

    statement  go to state 144
    expr       go to state 63
    lvalue     go to state 64
    type       go to state 65


State 142

   24 actuals_optional: COMMA expr actuals_optional •

    $default  reduce using rule 24 (actuals_optional)


State 143

   51 lvalue: lvalue DOT ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS •

    $default  reduce using rule 51 (lvalue)


State 144

   15 statement: KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement KEYWORD_ELSE statement •

    $default  reduce using rule 15 (statement)
