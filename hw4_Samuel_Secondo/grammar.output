Terminals unused in grammar

    KEYWORD_CLASS
    KEYWORD_EXTENDS
    UNKOWN


State 133 conflicts: 1 shift/reduce


Grammar

    0 $accept: root $end

    1 root: statement

    2 statement: expr SEMICOLON
    3          | KEYWORD_INT ID SEMICOLON
    4          | KEYWORD_BOOL ID SEMICOLON
    5          | KEYWORD_VOID ID SEMICOLON
    6          | ID ID SEMICOLON
    7          | KEYWORD_INT SQUARE_PAIR ID SEMICOLON
    8          | KEYWORD_BOOL SQUARE_PAIR ID SEMICOLON
    9          | KEYWORD_VOID SQUARE_PAIR ID SEMICOLON
   10          | ID SQUARE_PAIR ID SEMICOLON
   11          | lvalue ASSIGN expr SEMICOLON
   12          | KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement
   13          | KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement KEYWORD_ELSE statement
   14          | KEYWORD_WHILE OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement
   15          | OPEN_BRACE statement_klein CLOSE_BRACE
   16          | KEYWORD_RETURN expr SEMICOLON
   17          | SEMICOLON

   18 statement_klein: statement statement_klein
   19                | ε

   20 actuals: expr actuals_optional
   21        | ε

   22 actuals_optional: COMMA expr actuals_optional
   23                 | ε

   24 expr: expr TIMES expr
   25     | expr DIVIDE expr
   26     | expr PLUS expr
   27     | expr MINUS expr
   28     | OPEN_PARENTHESIS expr CLOSE_PARENTHESIS
   29     | expr AND expr
   30     | expr OR expr
   31     | expr EQUIVALENT expr
   32     | expr IS_NOT_EQUAL expr
   33     | expr LESS_THAN_OR_EQUAL expr
   34     | expr LESS_THAN expr
   35     | expr GREATER_THAN_OR_EQUAL expr
   36     | expr GREATER_THAN expr
   37     | MINUS expr
   38     | NEGATE expr
   39     | INTEGER
   40     | KEYWORD_TRUE
   41     | KEYWORD_FALSE
   42     | KEYWORD_NEW KEYWORD_INT OPEN_SQUARE expr CLOSE_SQUARE
   43     | KEYWORD_NEW KEYWORD_BOOL OPEN_SQUARE expr CLOSE_SQUARE
   44     | KEYWORD_NEW KEYWORD_VOID OPEN_SQUARE expr CLOSE_SQUARE
   45     | KEYWORD_NEW KEYWORD_INT SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE
   46     | KEYWORD_NEW KEYWORD_BOOL SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE
   47     | KEYWORD_NEW KEYWORD_VOID SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE
   48     | KEYWORD_NEW ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS
   49     | KEYWORD_NEW ID OPEN_SQUARE expr CLOSE_SQUARE
   50     | KEYWORD_NEW ID SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE
   51     | lvalue

   52 lvalue: ID
   53       | ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS
   54       | lvalue OPEN_SQUARE expr CLOSE_SQUARE
   55       | lvalue DOT ID
   56       | lvalue DOT ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS
   57       | KEYWORD_THIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SEMICOLON (258) 2 3 4 5 6 7 8 9 10 11 16 17
    COMMA (259) 22
    KEYWORD_NEW (260) 42 43 44 45 46 47 48 49 50
    KEYWORD_RETURN (261) 16
    OPEN_SQUARE (262) 42 43 44 45 46 47 49 50 54
    CLOSE_SQUARE (263) 42 43 44 45 46 47 49 50 54
    ASSIGN (264) 11
    LESS_THAN_OR_EQUAL (265) 33
    GREATER_THAN_OR_EQUAL (266) 35
    EQUIVALENT (267) 31
    IS_NOT_EQUAL (268) 32
    LESS_THAN (269) 34
    GREATER_THAN (270) 36
    OR (271) 30
    AND (272) 29
    MINUS (273) 27 37
    PLUS (274) 26
    DIVIDE (275) 25
    TIMES (276) 24
    NEGATE (277) 38
    DOT (278) 55 56
    OPEN_PARENTHESIS (279) 12 13 14 28 48 53 56
    CLOSE_PARENTHESIS (280) 12 13 14 28 48 53 56
    OPEN_BRACE (281) 15
    CLOSE_BRACE (282) 15
    SQUARE_PAIR (283) 7 8 9 10 45 46 47 50
    KEYWORD_WHILE (284) 14
    KEYWORD_IF (285) 12 13
    KEYWORD_ELSE (286) 13
    KEYWORD_THIS (287) 57
    KEYWORD_CLASS (288)
    KEYWORD_EXTENDS (289)
    KEYWORD_INT (290) 3 7 42 45
    KEYWORD_BOOL (291) 4 8 43 46
    KEYWORD_VOID (292) 5 9 44 47
    KEYWORD_TRUE <val> (293) 40
    KEYWORD_FALSE <val> (294) 41
    INTEGER <val> (295) 39
    ID <id> (296) 3 4 5 6 7 8 9 10 48 49 50 52 53 55 56
    UNKOWN (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    root (44)
        on left: 1
        on right: 0
    statement <statement> (45)
        on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
        on right: 1 12 13 14 18
    statement_klein <body> (46)
        on left: 18 19
        on right: 15 18
    actuals <actual> (47)
        on left: 20 21
        on right: 48 53 56
    actuals_optional <actual> (48)
        on left: 22 23
        on right: 20 22
    expr <expr> (49)
        on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 2 11 12 13 14 16 20 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 42 43 44 45 46 47 49 50 54
    lvalue <lvalue> (50)
        on left: 52 53 54 55 56 57
        on right: 11 51 54 55 56


State 0

    0 $accept: • root $end

    SEMICOLON         shift, and go to state 1
    KEYWORD_NEW       shift, and go to state 2
    KEYWORD_RETURN    shift, and go to state 3
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    OPEN_BRACE        shift, and go to state 7
    KEYWORD_WHILE     shift, and go to state 8
    KEYWORD_IF        shift, and go to state 9
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 17

    root       go to state 18
    statement  go to state 19
    expr       go to state 20
    lvalue     go to state 21


State 1

   17 statement: SEMICOLON •

    $default  reduce using rule 17 (statement)


State 2

   42 expr: KEYWORD_NEW • KEYWORD_INT OPEN_SQUARE expr CLOSE_SQUARE
   43     | KEYWORD_NEW • KEYWORD_BOOL OPEN_SQUARE expr CLOSE_SQUARE
   44     | KEYWORD_NEW • KEYWORD_VOID OPEN_SQUARE expr CLOSE_SQUARE
   45     | KEYWORD_NEW • KEYWORD_INT SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE
   46     | KEYWORD_NEW • KEYWORD_BOOL SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE
   47     | KEYWORD_NEW • KEYWORD_VOID SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE
   48     | KEYWORD_NEW • ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS
   49     | KEYWORD_NEW • ID OPEN_SQUARE expr CLOSE_SQUARE
   50     | KEYWORD_NEW • ID SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE

    KEYWORD_INT   shift, and go to state 22
    KEYWORD_BOOL  shift, and go to state 23
    KEYWORD_VOID  shift, and go to state 24
    ID            shift, and go to state 25


State 3

   16 statement: KEYWORD_RETURN • expr SEMICOLON

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 27
    lvalue  go to state 28


State 4

   37 expr: MINUS • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 29
    lvalue  go to state 28


State 5

   38 expr: NEGATE • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 30
    lvalue  go to state 28


State 6

   28 expr: OPEN_PARENTHESIS • expr CLOSE_PARENTHESIS

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 31
    lvalue  go to state 28


State 7

   15 statement: OPEN_BRACE • statement_klein CLOSE_BRACE

    SEMICOLON         shift, and go to state 1
    KEYWORD_NEW       shift, and go to state 2
    KEYWORD_RETURN    shift, and go to state 3
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    OPEN_BRACE        shift, and go to state 7
    KEYWORD_WHILE     shift, and go to state 8
    KEYWORD_IF        shift, and go to state 9
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 17

    $default  reduce using rule 19 (statement_klein)

    statement        go to state 32
    statement_klein  go to state 33
    expr             go to state 20
    lvalue           go to state 21


State 8

   14 statement: KEYWORD_WHILE • OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement

    OPEN_PARENTHESIS  shift, and go to state 34


State 9

   12 statement: KEYWORD_IF • OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement
   13          | KEYWORD_IF • OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement KEYWORD_ELSE statement

    OPEN_PARENTHESIS  shift, and go to state 35


State 10

   57 lvalue: KEYWORD_THIS •

    $default  reduce using rule 57 (lvalue)


State 11

    3 statement: KEYWORD_INT • ID SEMICOLON
    7          | KEYWORD_INT • SQUARE_PAIR ID SEMICOLON

    SQUARE_PAIR  shift, and go to state 36
    ID           shift, and go to state 37


State 12

    4 statement: KEYWORD_BOOL • ID SEMICOLON
    8          | KEYWORD_BOOL • SQUARE_PAIR ID SEMICOLON

    SQUARE_PAIR  shift, and go to state 38
    ID           shift, and go to state 39


State 13

    5 statement: KEYWORD_VOID • ID SEMICOLON
    9          | KEYWORD_VOID • SQUARE_PAIR ID SEMICOLON

    SQUARE_PAIR  shift, and go to state 40
    ID           shift, and go to state 41


State 14

   40 expr: KEYWORD_TRUE •

    $default  reduce using rule 40 (expr)


State 15

   41 expr: KEYWORD_FALSE •

    $default  reduce using rule 41 (expr)


State 16

   39 expr: INTEGER •

    $default  reduce using rule 39 (expr)


State 17

    6 statement: ID • ID SEMICOLON
   10          | ID • SQUARE_PAIR ID SEMICOLON
   52 lvalue: ID •
   53       | ID • OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 42
    SQUARE_PAIR       shift, and go to state 43
    ID                shift, and go to state 44

    $default  reduce using rule 52 (lvalue)


State 18

    0 $accept: root • $end

    $end  shift, and go to state 45


State 19

    1 root: statement •

    $default  reduce using rule 1 (root)


State 20

    2 statement: expr • SEMICOLON
   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    SEMICOLON              shift, and go to state 46
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58


State 21

   11 statement: lvalue • ASSIGN expr SEMICOLON
   51 expr: lvalue •
   54 lvalue: lvalue • OPEN_SQUARE expr CLOSE_SQUARE
   55       | lvalue • DOT ID
   56       | lvalue • DOT ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    OPEN_SQUARE  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    DOT          shift, and go to state 61

    $default  reduce using rule 51 (expr)


State 22

   42 expr: KEYWORD_NEW KEYWORD_INT • OPEN_SQUARE expr CLOSE_SQUARE
   45     | KEYWORD_NEW KEYWORD_INT • SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 62
    SQUARE_PAIR  shift, and go to state 63


State 23

   43 expr: KEYWORD_NEW KEYWORD_BOOL • OPEN_SQUARE expr CLOSE_SQUARE
   46     | KEYWORD_NEW KEYWORD_BOOL • SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 64
    SQUARE_PAIR  shift, and go to state 65


State 24

   44 expr: KEYWORD_NEW KEYWORD_VOID • OPEN_SQUARE expr CLOSE_SQUARE
   47     | KEYWORD_NEW KEYWORD_VOID • SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 66
    SQUARE_PAIR  shift, and go to state 67


State 25

   48 expr: KEYWORD_NEW ID • OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS
   49     | KEYWORD_NEW ID • OPEN_SQUARE expr CLOSE_SQUARE
   50     | KEYWORD_NEW ID • SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE

    OPEN_SQUARE       shift, and go to state 68
    OPEN_PARENTHESIS  shift, and go to state 69
    SQUARE_PAIR       shift, and go to state 70


State 26

   52 lvalue: ID •
   53       | ID • OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 42

    $default  reduce using rule 52 (lvalue)


State 27

   16 statement: KEYWORD_RETURN expr • SEMICOLON
   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    SEMICOLON              shift, and go to state 71
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58


State 28

   51 expr: lvalue •
   54 lvalue: lvalue • OPEN_SQUARE expr CLOSE_SQUARE
   55       | lvalue • DOT ID
   56       | lvalue • DOT ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    OPEN_SQUARE  shift, and go to state 59
    DOT          shift, and go to state 61

    $default  reduce using rule 51 (expr)


State 29

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr
   37     | MINUS expr •

    PLUS    shift, and go to state 56
    DIVIDE  shift, and go to state 57
    TIMES   shift, and go to state 58

    $default  reduce using rule 37 (expr)


State 30

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr
   38     | NEGATE expr •

    $default  reduce using rule 38 (expr)


State 31

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   28     | OPEN_PARENTHESIS expr • CLOSE_PARENTHESIS
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58
    CLOSE_PARENTHESIS      shift, and go to state 72


State 32

   18 statement_klein: statement • statement_klein

    SEMICOLON         shift, and go to state 1
    KEYWORD_NEW       shift, and go to state 2
    KEYWORD_RETURN    shift, and go to state 3
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    OPEN_BRACE        shift, and go to state 7
    KEYWORD_WHILE     shift, and go to state 8
    KEYWORD_IF        shift, and go to state 9
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 17

    $default  reduce using rule 19 (statement_klein)

    statement        go to state 32
    statement_klein  go to state 73
    expr             go to state 20
    lvalue           go to state 21


State 33

   15 statement: OPEN_BRACE statement_klein • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 74


State 34

   14 statement: KEYWORD_WHILE OPEN_PARENTHESIS • expr CLOSE_PARENTHESIS statement

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 75
    lvalue  go to state 28


State 35

   12 statement: KEYWORD_IF OPEN_PARENTHESIS • expr CLOSE_PARENTHESIS statement
   13          | KEYWORD_IF OPEN_PARENTHESIS • expr CLOSE_PARENTHESIS statement KEYWORD_ELSE statement

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 76
    lvalue  go to state 28


State 36

    7 statement: KEYWORD_INT SQUARE_PAIR • ID SEMICOLON

    ID  shift, and go to state 77


State 37

    3 statement: KEYWORD_INT ID • SEMICOLON

    SEMICOLON  shift, and go to state 78


State 38

    8 statement: KEYWORD_BOOL SQUARE_PAIR • ID SEMICOLON

    ID  shift, and go to state 79


State 39

    4 statement: KEYWORD_BOOL ID • SEMICOLON

    SEMICOLON  shift, and go to state 80


State 40

    9 statement: KEYWORD_VOID SQUARE_PAIR • ID SEMICOLON

    ID  shift, and go to state 81


State 41

    5 statement: KEYWORD_VOID ID • SEMICOLON

    SEMICOLON  shift, and go to state 82


State 42

   53 lvalue: ID OPEN_PARENTHESIS • actuals CLOSE_PARENTHESIS

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    $default  reduce using rule 21 (actuals)

    actuals  go to state 83
    expr     go to state 84
    lvalue   go to state 28


State 43

   10 statement: ID SQUARE_PAIR • ID SEMICOLON

    ID  shift, and go to state 85


State 44

    6 statement: ID ID • SEMICOLON

    SEMICOLON  shift, and go to state 86


State 45

    0 $accept: root $end •

    $default  accept


State 46

    2 statement: expr SEMICOLON •

    $default  reduce using rule 2 (statement)


State 47

   33 expr: expr LESS_THAN_OR_EQUAL • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 87
    lvalue  go to state 28


State 48

   35 expr: expr GREATER_THAN_OR_EQUAL • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 88
    lvalue  go to state 28


State 49

   31 expr: expr EQUIVALENT • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 89
    lvalue  go to state 28


State 50

   32 expr: expr IS_NOT_EQUAL • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 90
    lvalue  go to state 28


State 51

   34 expr: expr LESS_THAN • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 91
    lvalue  go to state 28


State 52

   36 expr: expr GREATER_THAN • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 92
    lvalue  go to state 28


State 53

   30 expr: expr OR • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 93
    lvalue  go to state 28


State 54

   29 expr: expr AND • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 94
    lvalue  go to state 28


State 55

   27 expr: expr MINUS • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 95
    lvalue  go to state 28


State 56

   26 expr: expr PLUS • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 96
    lvalue  go to state 28


State 57

   25 expr: expr DIVIDE • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 97
    lvalue  go to state 28


State 58

   24 expr: expr TIMES • expr

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 98
    lvalue  go to state 28


State 59

   54 lvalue: lvalue OPEN_SQUARE • expr CLOSE_SQUARE

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 99
    lvalue  go to state 28


State 60

   11 statement: lvalue ASSIGN • expr SEMICOLON

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 100
    lvalue  go to state 28


State 61

   55 lvalue: lvalue DOT • ID
   56       | lvalue DOT • ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    ID  shift, and go to state 101


State 62

   42 expr: KEYWORD_NEW KEYWORD_INT OPEN_SQUARE • expr CLOSE_SQUARE

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 102
    lvalue  go to state 28


State 63

   45 expr: KEYWORD_NEW KEYWORD_INT SQUARE_PAIR • OPEN_SQUARE expr CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 103


State 64

   43 expr: KEYWORD_NEW KEYWORD_BOOL OPEN_SQUARE • expr CLOSE_SQUARE

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 104
    lvalue  go to state 28


State 65

   46 expr: KEYWORD_NEW KEYWORD_BOOL SQUARE_PAIR • OPEN_SQUARE expr CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 105


State 66

   44 expr: KEYWORD_NEW KEYWORD_VOID OPEN_SQUARE • expr CLOSE_SQUARE

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 106
    lvalue  go to state 28


State 67

   47 expr: KEYWORD_NEW KEYWORD_VOID SQUARE_PAIR • OPEN_SQUARE expr CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 107


State 68

   49 expr: KEYWORD_NEW ID OPEN_SQUARE • expr CLOSE_SQUARE

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 108
    lvalue  go to state 28


State 69

   48 expr: KEYWORD_NEW ID OPEN_PARENTHESIS • actuals CLOSE_PARENTHESIS

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    $default  reduce using rule 21 (actuals)

    actuals  go to state 109
    expr     go to state 84
    lvalue   go to state 28


State 70

   50 expr: KEYWORD_NEW ID SQUARE_PAIR • OPEN_SQUARE expr CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 110


State 71

   16 statement: KEYWORD_RETURN expr SEMICOLON •

    $default  reduce using rule 16 (statement)


State 72

   28 expr: OPEN_PARENTHESIS expr CLOSE_PARENTHESIS •

    $default  reduce using rule 28 (expr)


State 73

   18 statement_klein: statement statement_klein •

    $default  reduce using rule 18 (statement_klein)


State 74

   15 statement: OPEN_BRACE statement_klein CLOSE_BRACE •

    $default  reduce using rule 15 (statement)


State 75

   14 statement: KEYWORD_WHILE OPEN_PARENTHESIS expr • CLOSE_PARENTHESIS statement
   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58
    CLOSE_PARENTHESIS      shift, and go to state 111


State 76

   12 statement: KEYWORD_IF OPEN_PARENTHESIS expr • CLOSE_PARENTHESIS statement
   13          | KEYWORD_IF OPEN_PARENTHESIS expr • CLOSE_PARENTHESIS statement KEYWORD_ELSE statement
   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58
    CLOSE_PARENTHESIS      shift, and go to state 112


State 77

    7 statement: KEYWORD_INT SQUARE_PAIR ID • SEMICOLON

    SEMICOLON  shift, and go to state 113


State 78

    3 statement: KEYWORD_INT ID SEMICOLON •

    $default  reduce using rule 3 (statement)


State 79

    8 statement: KEYWORD_BOOL SQUARE_PAIR ID • SEMICOLON

    SEMICOLON  shift, and go to state 114


State 80

    4 statement: KEYWORD_BOOL ID SEMICOLON •

    $default  reduce using rule 4 (statement)


State 81

    9 statement: KEYWORD_VOID SQUARE_PAIR ID • SEMICOLON

    SEMICOLON  shift, and go to state 115


State 82

    5 statement: KEYWORD_VOID ID SEMICOLON •

    $default  reduce using rule 5 (statement)


State 83

   53 lvalue: ID OPEN_PARENTHESIS actuals • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 116


State 84

   20 actuals: expr • actuals_optional
   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    COMMA                  shift, and go to state 117
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58

    $default  reduce using rule 23 (actuals_optional)

    actuals_optional  go to state 118


State 85

   10 statement: ID SQUARE_PAIR ID • SEMICOLON

    SEMICOLON  shift, and go to state 119


State 86

    6 statement: ID ID SEMICOLON •

    $default  reduce using rule 6 (statement)


State 87

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   33     | expr LESS_THAN_OR_EQUAL expr •
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58

    LESS_THAN_OR_EQUAL  error (nonassociative)

    $default  reduce using rule 33 (expr)


State 88

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   35     | expr GREATER_THAN_OR_EQUAL expr •
   36     | expr • GREATER_THAN expr

    EQUIVALENT    shift, and go to state 49
    IS_NOT_EQUAL  shift, and go to state 50
    LESS_THAN     shift, and go to state 51
    GREATER_THAN  shift, and go to state 52
    OR            shift, and go to state 53
    AND           shift, and go to state 54
    MINUS         shift, and go to state 55
    PLUS          shift, and go to state 56
    DIVIDE        shift, and go to state 57
    TIMES         shift, and go to state 58

    GREATER_THAN_OR_EQUAL  error (nonassociative)

    $default  reduce using rule 35 (expr)


State 89

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   31     | expr EQUIVALENT expr •
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    IS_NOT_EQUAL  shift, and go to state 50
    LESS_THAN     shift, and go to state 51
    GREATER_THAN  shift, and go to state 52
    OR            shift, and go to state 53
    AND           shift, and go to state 54
    MINUS         shift, and go to state 55
    PLUS          shift, and go to state 56
    DIVIDE        shift, and go to state 57
    TIMES         shift, and go to state 58

    EQUIVALENT  error (nonassociative)

    $default  reduce using rule 31 (expr)


State 90

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   32     | expr IS_NOT_EQUAL expr •
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    LESS_THAN     shift, and go to state 51
    GREATER_THAN  shift, and go to state 52
    OR            shift, and go to state 53
    AND           shift, and go to state 54
    MINUS         shift, and go to state 55
    PLUS          shift, and go to state 56
    DIVIDE        shift, and go to state 57
    TIMES         shift, and go to state 58

    IS_NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 32 (expr)


State 91

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   34     | expr LESS_THAN expr •
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    GREATER_THAN  shift, and go to state 52
    OR            shift, and go to state 53
    AND           shift, and go to state 54
    MINUS         shift, and go to state 55
    PLUS          shift, and go to state 56
    DIVIDE        shift, and go to state 57
    TIMES         shift, and go to state 58

    LESS_THAN  error (nonassociative)

    $default  reduce using rule 34 (expr)


State 92

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr
   36     | expr GREATER_THAN expr •

    OR      shift, and go to state 53
    AND     shift, and go to state 54
    MINUS   shift, and go to state 55
    PLUS    shift, and go to state 56
    DIVIDE  shift, and go to state 57
    TIMES   shift, and go to state 58

    GREATER_THAN  error (nonassociative)

    $default  reduce using rule 36 (expr)


State 93

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   30     | expr OR expr •
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    AND     shift, and go to state 54
    MINUS   shift, and go to state 55
    PLUS    shift, and go to state 56
    DIVIDE  shift, and go to state 57
    TIMES   shift, and go to state 58

    $default  reduce using rule 30 (expr)


State 94

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   29     | expr AND expr •
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    MINUS   shift, and go to state 55
    PLUS    shift, and go to state 56
    DIVIDE  shift, and go to state 57
    TIMES   shift, and go to state 58

    $default  reduce using rule 29 (expr)


State 95

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   27     | expr MINUS expr •
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    PLUS    shift, and go to state 56
    DIVIDE  shift, and go to state 57
    TIMES   shift, and go to state 58

    $default  reduce using rule 27 (expr)


State 96

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   26     | expr PLUS expr •
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    DIVIDE  shift, and go to state 57
    TIMES   shift, and go to state 58

    $default  reduce using rule 26 (expr)


State 97

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   25     | expr DIVIDE expr •
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    TIMES  shift, and go to state 58

    $default  reduce using rule 25 (expr)


State 98

   24 expr: expr • TIMES expr
   24     | expr TIMES expr •
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    $default  reduce using rule 24 (expr)


State 99

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr
   54 lvalue: lvalue OPEN_SQUARE expr • CLOSE_SQUARE

    CLOSE_SQUARE           shift, and go to state 120
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58


State 100

   11 statement: lvalue ASSIGN expr • SEMICOLON
   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    SEMICOLON              shift, and go to state 121
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58


State 101

   55 lvalue: lvalue DOT ID •
   56       | lvalue DOT ID • OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 122

    $default  reduce using rule 55 (lvalue)


State 102

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr
   42     | KEYWORD_NEW KEYWORD_INT OPEN_SQUARE expr • CLOSE_SQUARE

    CLOSE_SQUARE           shift, and go to state 123
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58


State 103

   45 expr: KEYWORD_NEW KEYWORD_INT SQUARE_PAIR OPEN_SQUARE • expr CLOSE_SQUARE

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 124
    lvalue  go to state 28


State 104

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr
   43     | KEYWORD_NEW KEYWORD_BOOL OPEN_SQUARE expr • CLOSE_SQUARE

    CLOSE_SQUARE           shift, and go to state 125
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58


State 105

   46 expr: KEYWORD_NEW KEYWORD_BOOL SQUARE_PAIR OPEN_SQUARE • expr CLOSE_SQUARE

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 126
    lvalue  go to state 28


State 106

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr
   44     | KEYWORD_NEW KEYWORD_VOID OPEN_SQUARE expr • CLOSE_SQUARE

    CLOSE_SQUARE           shift, and go to state 127
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58


State 107

   47 expr: KEYWORD_NEW KEYWORD_VOID SQUARE_PAIR OPEN_SQUARE • expr CLOSE_SQUARE

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 128
    lvalue  go to state 28


State 108

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr
   49     | KEYWORD_NEW ID OPEN_SQUARE expr • CLOSE_SQUARE

    CLOSE_SQUARE           shift, and go to state 129
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58


State 109

   48 expr: KEYWORD_NEW ID OPEN_PARENTHESIS actuals • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 130


State 110

   50 expr: KEYWORD_NEW ID SQUARE_PAIR OPEN_SQUARE • expr CLOSE_SQUARE

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 131
    lvalue  go to state 28


State 111

   14 statement: KEYWORD_WHILE OPEN_PARENTHESIS expr CLOSE_PARENTHESIS • statement

    SEMICOLON         shift, and go to state 1
    KEYWORD_NEW       shift, and go to state 2
    KEYWORD_RETURN    shift, and go to state 3
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    OPEN_BRACE        shift, and go to state 7
    KEYWORD_WHILE     shift, and go to state 8
    KEYWORD_IF        shift, and go to state 9
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 17

    statement  go to state 132
    expr       go to state 20
    lvalue     go to state 21


State 112

   12 statement: KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS • statement
   13          | KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS • statement KEYWORD_ELSE statement

    SEMICOLON         shift, and go to state 1
    KEYWORD_NEW       shift, and go to state 2
    KEYWORD_RETURN    shift, and go to state 3
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    OPEN_BRACE        shift, and go to state 7
    KEYWORD_WHILE     shift, and go to state 8
    KEYWORD_IF        shift, and go to state 9
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 17

    statement  go to state 133
    expr       go to state 20
    lvalue     go to state 21


State 113

    7 statement: KEYWORD_INT SQUARE_PAIR ID SEMICOLON •

    $default  reduce using rule 7 (statement)


State 114

    8 statement: KEYWORD_BOOL SQUARE_PAIR ID SEMICOLON •

    $default  reduce using rule 8 (statement)


State 115

    9 statement: KEYWORD_VOID SQUARE_PAIR ID SEMICOLON •

    $default  reduce using rule 9 (statement)


State 116

   53 lvalue: ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS •

    $default  reduce using rule 53 (lvalue)


State 117

   22 actuals_optional: COMMA • expr actuals_optional

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    expr    go to state 134
    lvalue  go to state 28


State 118

   20 actuals: expr actuals_optional •

    $default  reduce using rule 20 (actuals)


State 119

   10 statement: ID SQUARE_PAIR ID SEMICOLON •

    $default  reduce using rule 10 (statement)


State 120

   54 lvalue: lvalue OPEN_SQUARE expr CLOSE_SQUARE •

    $default  reduce using rule 54 (lvalue)


State 121

   11 statement: lvalue ASSIGN expr SEMICOLON •

    $default  reduce using rule 11 (statement)


State 122

   56 lvalue: lvalue DOT ID OPEN_PARENTHESIS • actuals CLOSE_PARENTHESIS

    KEYWORD_NEW       shift, and go to state 2
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 26

    $default  reduce using rule 21 (actuals)

    actuals  go to state 135
    expr     go to state 84
    lvalue   go to state 28


State 123

   42 expr: KEYWORD_NEW KEYWORD_INT OPEN_SQUARE expr CLOSE_SQUARE •

    $default  reduce using rule 42 (expr)


State 124

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr
   45     | KEYWORD_NEW KEYWORD_INT SQUARE_PAIR OPEN_SQUARE expr • CLOSE_SQUARE

    CLOSE_SQUARE           shift, and go to state 136
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58


State 125

   43 expr: KEYWORD_NEW KEYWORD_BOOL OPEN_SQUARE expr CLOSE_SQUARE •

    $default  reduce using rule 43 (expr)


State 126

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr
   46     | KEYWORD_NEW KEYWORD_BOOL SQUARE_PAIR OPEN_SQUARE expr • CLOSE_SQUARE

    CLOSE_SQUARE           shift, and go to state 137
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58


State 127

   44 expr: KEYWORD_NEW KEYWORD_VOID OPEN_SQUARE expr CLOSE_SQUARE •

    $default  reduce using rule 44 (expr)


State 128

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr
   47     | KEYWORD_NEW KEYWORD_VOID SQUARE_PAIR OPEN_SQUARE expr • CLOSE_SQUARE

    CLOSE_SQUARE           shift, and go to state 138
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58


State 129

   49 expr: KEYWORD_NEW ID OPEN_SQUARE expr CLOSE_SQUARE •

    $default  reduce using rule 49 (expr)


State 130

   48 expr: KEYWORD_NEW ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS •

    $default  reduce using rule 48 (expr)


State 131

   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr
   50     | KEYWORD_NEW ID SQUARE_PAIR OPEN_SQUARE expr • CLOSE_SQUARE

    CLOSE_SQUARE           shift, and go to state 139
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58


State 132

   14 statement: KEYWORD_WHILE OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement •

    $default  reduce using rule 14 (statement)


State 133

   12 statement: KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement •
   13          | KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement • KEYWORD_ELSE statement

    KEYWORD_ELSE  shift, and go to state 140

    KEYWORD_ELSE  [reduce using rule 12 (statement)]
    $default      reduce using rule 12 (statement)


State 134

   22 actuals_optional: COMMA expr • actuals_optional
   24 expr: expr • TIMES expr
   25     | expr • DIVIDE expr
   26     | expr • PLUS expr
   27     | expr • MINUS expr
   29     | expr • AND expr
   30     | expr • OR expr
   31     | expr • EQUIVALENT expr
   32     | expr • IS_NOT_EQUAL expr
   33     | expr • LESS_THAN_OR_EQUAL expr
   34     | expr • LESS_THAN expr
   35     | expr • GREATER_THAN_OR_EQUAL expr
   36     | expr • GREATER_THAN expr

    COMMA                  shift, and go to state 117
    LESS_THAN_OR_EQUAL     shift, and go to state 47
    GREATER_THAN_OR_EQUAL  shift, and go to state 48
    EQUIVALENT             shift, and go to state 49
    IS_NOT_EQUAL           shift, and go to state 50
    LESS_THAN              shift, and go to state 51
    GREATER_THAN           shift, and go to state 52
    OR                     shift, and go to state 53
    AND                    shift, and go to state 54
    MINUS                  shift, and go to state 55
    PLUS                   shift, and go to state 56
    DIVIDE                 shift, and go to state 57
    TIMES                  shift, and go to state 58

    $default  reduce using rule 23 (actuals_optional)

    actuals_optional  go to state 141


State 135

   56 lvalue: lvalue DOT ID OPEN_PARENTHESIS actuals • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 142


State 136

   45 expr: KEYWORD_NEW KEYWORD_INT SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE •

    $default  reduce using rule 45 (expr)


State 137

   46 expr: KEYWORD_NEW KEYWORD_BOOL SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE •

    $default  reduce using rule 46 (expr)


State 138

   47 expr: KEYWORD_NEW KEYWORD_VOID SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE •

    $default  reduce using rule 47 (expr)


State 139

   50 expr: KEYWORD_NEW ID SQUARE_PAIR OPEN_SQUARE expr CLOSE_SQUARE •

    $default  reduce using rule 50 (expr)


State 140

   13 statement: KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement KEYWORD_ELSE • statement

    SEMICOLON         shift, and go to state 1
    KEYWORD_NEW       shift, and go to state 2
    KEYWORD_RETURN    shift, and go to state 3
    MINUS             shift, and go to state 4
    NEGATE            shift, and go to state 5
    OPEN_PARENTHESIS  shift, and go to state 6
    OPEN_BRACE        shift, and go to state 7
    KEYWORD_WHILE     shift, and go to state 8
    KEYWORD_IF        shift, and go to state 9
    KEYWORD_THIS      shift, and go to state 10
    KEYWORD_INT       shift, and go to state 11
    KEYWORD_BOOL      shift, and go to state 12
    KEYWORD_VOID      shift, and go to state 13
    KEYWORD_TRUE      shift, and go to state 14
    KEYWORD_FALSE     shift, and go to state 15
    INTEGER           shift, and go to state 16
    ID                shift, and go to state 17

    statement  go to state 143
    expr       go to state 20
    lvalue     go to state 21


State 141

   22 actuals_optional: COMMA expr actuals_optional •

    $default  reduce using rule 22 (actuals_optional)


State 142

   56 lvalue: lvalue DOT ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS •

    $default  reduce using rule 56 (lvalue)


State 143

   13 statement: KEYWORD_IF OPEN_PARENTHESIS expr CLOSE_PARENTHESIS statement KEYWORD_ELSE statement •

    $default  reduce using rule 13 (statement)
