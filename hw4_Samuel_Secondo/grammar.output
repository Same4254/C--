Terminals unused in grammar

    ASSIGN
    DOT
    OPEN_SQUARE
    CLOSE_SQUARE
    OPEN_BRACE
    CLOSE_BRACE
    KEYWORD_WHILE
    KEYWORD_IF
    KEYWORD_ELSE
    KEYWORD_THIS
    KEYWORD_CLASS
    KEYWORD_EXTENDS
    KEYWORD_RETURN
    UNKOWN


Grammar

    0 $accept: statement $end

    1 statement: expr SEMICOLON
    2          | KEYWORD_INT ID SEMICOLON
    3          | KEYWORD_BOOL ID SEMICOLON
    4          | KEYWORD_VOID ID SEMICOLON
    5          | ID ID SEMICOLON
    6          | KEYWORD_INT SQUARE_PAIR ID SEMICOLON
    7          | KEYWORD_BOOL SQUARE_PAIR ID SEMICOLON
    8          | KEYWORD_VOID SQUARE_PAIR ID SEMICOLON
    9          | ID SQUARE_PAIR ID SEMICOLON

   10 actuals: expr actuals_optional

   11 actuals_optional: COMMA expr actuals_optional
   12                 | %empty

   13 expr: expr TIMES expr
   14     | expr DIVIDE expr
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | OPEN_PARENTHESIS expr CLOSE_PARENTHESIS
   18     | expr AND expr
   19     | expr OR expr
   20     | expr EQUIVALENT expr
   21     | expr IS_NOT_EQUAL expr
   22     | expr LESS_THAN_OR_EQUAL expr
   23     | expr LESS_THAN expr
   24     | expr GREATER_THAN_OR_EQUAL expr
   25     | expr GREATER_THAN expr
   26     | MINUS expr
   27     | NEGATE expr
   28     | INTEGER
   29     | KEYWORD_TRUE
   30     | KEYWORD_FALSE
   31     | KEYWORD_NEW ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SEMICOLON (258) 1 2 3 4 5 6 7 8 9
    COMMA (259) 11
    ASSIGN (260)
    LESS_THAN_OR_EQUAL (261) 22
    GREATER_THAN_OR_EQUAL (262) 24
    EQUIVALENT (263) 20
    IS_NOT_EQUAL (264) 21
    LESS_THAN (265) 23
    GREATER_THAN (266) 25
    OR (267) 19
    AND (268) 18
    MINUS (269) 16 26
    PLUS (270) 15
    DIVIDE (271) 14
    TIMES (272) 13
    NEGATE (273) 27
    DOT (274)
    OPEN_SQUARE (275)
    CLOSE_SQUARE (276)
    OPEN_PARENTHESIS (277) 17 31
    CLOSE_PARENTHESIS (278) 17 31
    OPEN_BRACE (279)
    CLOSE_BRACE (280)
    SQUARE_PAIR (281) 6 7 8 9
    KEYWORD_WHILE (282)
    KEYWORD_IF (283)
    KEYWORD_ELSE (284)
    KEYWORD_THIS (285)
    KEYWORD_CLASS (286)
    KEYWORD_EXTENDS (287)
    KEYWORD_NEW (288) 31
    KEYWORD_RETURN (289)
    KEYWORD_INT (290) 2 6
    KEYWORD_BOOL (291) 3 7
    KEYWORD_VOID (292) 4 8
    KEYWORD_TRUE <val> (293) 29
    KEYWORD_FALSE <val> (294) 30
    INTEGER <val> (295) 28
    ID <id> (296) 2 3 4 5 6 7 8 9 31
    UNKOWN (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    statement <node> (44)
        on left: 1 2 3 4 5 6 7 8 9
        on right: 0
    actuals <actual> (45)
        on left: 10
        on right: 31
    actuals_optional <actual> (46)
        on left: 11 12
        on right: 10 11
    expr <node> (47)
        on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
        on right: 1 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27


State 0

    0 $accept: . statement $end

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_INT       shift, and go to state 5
    KEYWORD_BOOL      shift, and go to state 6
    KEYWORD_VOID      shift, and go to state 7
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10
    ID                shift, and go to state 11

    statement  go to state 12
    expr       go to state 13


State 1

   26 expr: MINUS . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 14


State 2

   27 expr: NEGATE . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 15


State 3

   17 expr: OPEN_PARENTHESIS . expr CLOSE_PARENTHESIS

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 16


State 4

   31 expr: KEYWORD_NEW . ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    ID  shift, and go to state 17


State 5

    2 statement: KEYWORD_INT . ID SEMICOLON
    6          | KEYWORD_INT . SQUARE_PAIR ID SEMICOLON

    SQUARE_PAIR  shift, and go to state 18
    ID           shift, and go to state 19


State 6

    3 statement: KEYWORD_BOOL . ID SEMICOLON
    7          | KEYWORD_BOOL . SQUARE_PAIR ID SEMICOLON

    SQUARE_PAIR  shift, and go to state 20
    ID           shift, and go to state 21


State 7

    4 statement: KEYWORD_VOID . ID SEMICOLON
    8          | KEYWORD_VOID . SQUARE_PAIR ID SEMICOLON

    SQUARE_PAIR  shift, and go to state 22
    ID           shift, and go to state 23


State 8

   29 expr: KEYWORD_TRUE .

    $default  reduce using rule 29 (expr)


State 9

   30 expr: KEYWORD_FALSE .

    $default  reduce using rule 30 (expr)


State 10

   28 expr: INTEGER .

    $default  reduce using rule 28 (expr)


State 11

    5 statement: ID . ID SEMICOLON
    9          | ID . SQUARE_PAIR ID SEMICOLON

    SQUARE_PAIR  shift, and go to state 24
    ID           shift, and go to state 25


State 12

    0 $accept: statement . $end

    $end  shift, and go to state 26


State 13

    1 statement: expr . SEMICOLON
   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    SEMICOLON              shift, and go to state 27
    LESS_THAN_OR_EQUAL     shift, and go to state 28
    GREATER_THAN_OR_EQUAL  shift, and go to state 29
    EQUIVALENT             shift, and go to state 30
    IS_NOT_EQUAL           shift, and go to state 31
    LESS_THAN              shift, and go to state 32
    GREATER_THAN           shift, and go to state 33
    OR                     shift, and go to state 34
    AND                    shift, and go to state 35
    MINUS                  shift, and go to state 36
    PLUS                   shift, and go to state 37
    DIVIDE                 shift, and go to state 38
    TIMES                  shift, and go to state 39


State 14

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr
   26     | MINUS expr .

    PLUS    shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39

    $default  reduce using rule 26 (expr)


State 15

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr
   27     | NEGATE expr .

    $default  reduce using rule 27 (expr)


State 16

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   17     | OPEN_PARENTHESIS expr . CLOSE_PARENTHESIS
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    LESS_THAN_OR_EQUAL     shift, and go to state 28
    GREATER_THAN_OR_EQUAL  shift, and go to state 29
    EQUIVALENT             shift, and go to state 30
    IS_NOT_EQUAL           shift, and go to state 31
    LESS_THAN              shift, and go to state 32
    GREATER_THAN           shift, and go to state 33
    OR                     shift, and go to state 34
    AND                    shift, and go to state 35
    MINUS                  shift, and go to state 36
    PLUS                   shift, and go to state 37
    DIVIDE                 shift, and go to state 38
    TIMES                  shift, and go to state 39
    CLOSE_PARENTHESIS      shift, and go to state 40


State 17

   31 expr: KEYWORD_NEW ID . OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 41


State 18

    6 statement: KEYWORD_INT SQUARE_PAIR . ID SEMICOLON

    ID  shift, and go to state 42


State 19

    2 statement: KEYWORD_INT ID . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 20

    7 statement: KEYWORD_BOOL SQUARE_PAIR . ID SEMICOLON

    ID  shift, and go to state 44


State 21

    3 statement: KEYWORD_BOOL ID . SEMICOLON

    SEMICOLON  shift, and go to state 45


State 22

    8 statement: KEYWORD_VOID SQUARE_PAIR . ID SEMICOLON

    ID  shift, and go to state 46


State 23

    4 statement: KEYWORD_VOID ID . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 24

    9 statement: ID SQUARE_PAIR . ID SEMICOLON

    ID  shift, and go to state 48


State 25

    5 statement: ID ID . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 26

    0 $accept: statement $end .

    $default  accept


State 27

    1 statement: expr SEMICOLON .

    $default  reduce using rule 1 (statement)


State 28

   22 expr: expr LESS_THAN_OR_EQUAL . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 50


State 29

   24 expr: expr GREATER_THAN_OR_EQUAL . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 51


State 30

   20 expr: expr EQUIVALENT . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 52


State 31

   21 expr: expr IS_NOT_EQUAL . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 53


State 32

   23 expr: expr LESS_THAN . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 54


State 33

   25 expr: expr GREATER_THAN . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 55


State 34

   19 expr: expr OR . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 56


State 35

   18 expr: expr AND . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 57


State 36

   16 expr: expr MINUS . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 58


State 37

   15 expr: expr PLUS . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 59


State 38

   14 expr: expr DIVIDE . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 60


State 39

   13 expr: expr TIMES . expr

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 61


State 40

   17 expr: OPEN_PARENTHESIS expr CLOSE_PARENTHESIS .

    $default  reduce using rule 17 (expr)


State 41

   31 expr: KEYWORD_NEW ID OPEN_PARENTHESIS . actuals CLOSE_PARENTHESIS

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    actuals  go to state 62
    expr     go to state 63


State 42

    6 statement: KEYWORD_INT SQUARE_PAIR ID . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 43

    2 statement: KEYWORD_INT ID SEMICOLON .

    $default  reduce using rule 2 (statement)


State 44

    7 statement: KEYWORD_BOOL SQUARE_PAIR ID . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 45

    3 statement: KEYWORD_BOOL ID SEMICOLON .

    $default  reduce using rule 3 (statement)


State 46

    8 statement: KEYWORD_VOID SQUARE_PAIR ID . SEMICOLON

    SEMICOLON  shift, and go to state 66


State 47

    4 statement: KEYWORD_VOID ID SEMICOLON .

    $default  reduce using rule 4 (statement)


State 48

    9 statement: ID SQUARE_PAIR ID . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 49

    5 statement: ID ID SEMICOLON .

    $default  reduce using rule 5 (statement)


State 50

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   22     | expr LESS_THAN_OR_EQUAL expr .
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    GREATER_THAN_OR_EQUAL  shift, and go to state 29
    EQUIVALENT             shift, and go to state 30
    IS_NOT_EQUAL           shift, and go to state 31
    LESS_THAN              shift, and go to state 32
    GREATER_THAN           shift, and go to state 33
    OR                     shift, and go to state 34
    AND                    shift, and go to state 35
    MINUS                  shift, and go to state 36
    PLUS                   shift, and go to state 37
    DIVIDE                 shift, and go to state 38
    TIMES                  shift, and go to state 39

    LESS_THAN_OR_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 51

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   24     | expr GREATER_THAN_OR_EQUAL expr .
   25     | expr . GREATER_THAN expr

    EQUIVALENT    shift, and go to state 30
    IS_NOT_EQUAL  shift, and go to state 31
    LESS_THAN     shift, and go to state 32
    GREATER_THAN  shift, and go to state 33
    OR            shift, and go to state 34
    AND           shift, and go to state 35
    MINUS         shift, and go to state 36
    PLUS          shift, and go to state 37
    DIVIDE        shift, and go to state 38
    TIMES         shift, and go to state 39

    GREATER_THAN_OR_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 52

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   20     | expr EQUIVALENT expr .
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    IS_NOT_EQUAL  shift, and go to state 31
    LESS_THAN     shift, and go to state 32
    GREATER_THAN  shift, and go to state 33
    OR            shift, and go to state 34
    AND           shift, and go to state 35
    MINUS         shift, and go to state 36
    PLUS          shift, and go to state 37
    DIVIDE        shift, and go to state 38
    TIMES         shift, and go to state 39

    EQUIVALENT  error (nonassociative)

    $default  reduce using rule 20 (expr)


State 53

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   21     | expr IS_NOT_EQUAL expr .
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    LESS_THAN     shift, and go to state 32
    GREATER_THAN  shift, and go to state 33
    OR            shift, and go to state 34
    AND           shift, and go to state 35
    MINUS         shift, and go to state 36
    PLUS          shift, and go to state 37
    DIVIDE        shift, and go to state 38
    TIMES         shift, and go to state 39

    IS_NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 54

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   23     | expr LESS_THAN expr .
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    GREATER_THAN  shift, and go to state 33
    OR            shift, and go to state 34
    AND           shift, and go to state 35
    MINUS         shift, and go to state 36
    PLUS          shift, and go to state 37
    DIVIDE        shift, and go to state 38
    TIMES         shift, and go to state 39

    LESS_THAN  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 55

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr
   25     | expr GREATER_THAN expr .

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    MINUS   shift, and go to state 36
    PLUS    shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39

    GREATER_THAN  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 56

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   19     | expr OR expr .
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    AND     shift, and go to state 35
    MINUS   shift, and go to state 36
    PLUS    shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39

    $default  reduce using rule 19 (expr)


State 57

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   18     | expr AND expr .
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    MINUS   shift, and go to state 36
    PLUS    shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39

    $default  reduce using rule 18 (expr)


State 58

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   16     | expr MINUS expr .
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    PLUS    shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39

    $default  reduce using rule 16 (expr)


State 59

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   15     | expr PLUS expr .
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39

    $default  reduce using rule 15 (expr)


State 60

   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   14     | expr DIVIDE expr .
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    TIMES  shift, and go to state 39

    $default  reduce using rule 14 (expr)


State 61

   13 expr: expr . TIMES expr
   13     | expr TIMES expr .
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    $default  reduce using rule 13 (expr)


State 62

   31 expr: KEYWORD_NEW ID OPEN_PARENTHESIS actuals . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 68


State 63

   10 actuals: expr . actuals_optional
   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    COMMA                  shift, and go to state 69
    LESS_THAN_OR_EQUAL     shift, and go to state 28
    GREATER_THAN_OR_EQUAL  shift, and go to state 29
    EQUIVALENT             shift, and go to state 30
    IS_NOT_EQUAL           shift, and go to state 31
    LESS_THAN              shift, and go to state 32
    GREATER_THAN           shift, and go to state 33
    OR                     shift, and go to state 34
    AND                    shift, and go to state 35
    MINUS                  shift, and go to state 36
    PLUS                   shift, and go to state 37
    DIVIDE                 shift, and go to state 38
    TIMES                  shift, and go to state 39

    $default  reduce using rule 12 (actuals_optional)

    actuals_optional  go to state 70


State 64

    6 statement: KEYWORD_INT SQUARE_PAIR ID SEMICOLON .

    $default  reduce using rule 6 (statement)


State 65

    7 statement: KEYWORD_BOOL SQUARE_PAIR ID SEMICOLON .

    $default  reduce using rule 7 (statement)


State 66

    8 statement: KEYWORD_VOID SQUARE_PAIR ID SEMICOLON .

    $default  reduce using rule 8 (statement)


State 67

    9 statement: ID SQUARE_PAIR ID SEMICOLON .

    $default  reduce using rule 9 (statement)


State 68

   31 expr: KEYWORD_NEW ID OPEN_PARENTHESIS actuals CLOSE_PARENTHESIS .

    $default  reduce using rule 31 (expr)


State 69

   11 actuals_optional: COMMA . expr actuals_optional

    MINUS             shift, and go to state 1
    NEGATE            shift, and go to state 2
    OPEN_PARENTHESIS  shift, and go to state 3
    KEYWORD_NEW       shift, and go to state 4
    KEYWORD_TRUE      shift, and go to state 8
    KEYWORD_FALSE     shift, and go to state 9
    INTEGER           shift, and go to state 10

    expr  go to state 71


State 70

   10 actuals: expr actuals_optional .

    $default  reduce using rule 10 (actuals)


State 71

   11 actuals_optional: COMMA expr . actuals_optional
   13 expr: expr . TIMES expr
   14     | expr . DIVIDE expr
   15     | expr . PLUS expr
   16     | expr . MINUS expr
   18     | expr . AND expr
   19     | expr . OR expr
   20     | expr . EQUIVALENT expr
   21     | expr . IS_NOT_EQUAL expr
   22     | expr . LESS_THAN_OR_EQUAL expr
   23     | expr . LESS_THAN expr
   24     | expr . GREATER_THAN_OR_EQUAL expr
   25     | expr . GREATER_THAN expr

    COMMA                  shift, and go to state 69
    LESS_THAN_OR_EQUAL     shift, and go to state 28
    GREATER_THAN_OR_EQUAL  shift, and go to state 29
    EQUIVALENT             shift, and go to state 30
    IS_NOT_EQUAL           shift, and go to state 31
    LESS_THAN              shift, and go to state 32
    GREATER_THAN           shift, and go to state 33
    OR                     shift, and go to state 34
    AND                    shift, and go to state 35
    MINUS                  shift, and go to state 36
    PLUS                   shift, and go to state 37
    DIVIDE                 shift, and go to state 38
    TIMES                  shift, and go to state 39

    $default  reduce using rule 12 (actuals_optional)

    actuals_optional  go to state 72


State 72

   11 actuals_optional: COMMA expr actuals_optional .

    $default  reduce using rule 11 (actuals_optional)
